name: CI
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  cargo-build-and-test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
      - name: Install picotool
        run: |
          cd "$(mktemp -d)"
          git clone --single-branch --branch 2.1.1 --depth 1 https://github.com/raspberrypi/pico-sdk.git
          git -C pico-sdk submodule update --init --depth 1 lib/mbedtls
          git clone --single-branch --branch 2.1.1 --depth 1 https://github.com/raspberrypi/picotool.git
          cmake -S picotool -B build -D CMAKE_BUILD_TYPE=Release -D CMAKE_POLICY_VERSION_MINIMUM=3.5 -D PICOTOOL_NO_LIBUSB=ON -D PICO_SDK_PATH="$PWD/pico-sdk" -D CMAKE_INSTALL_PREFIX="$HOME/.local"
          cmake --build build
          cmake --install build
          picotool
      - name: Install flip-link
        run: cargo install --locked flip-link@0.1.10
      - run: "cargo test-libs --target \"$(rustc -vV | sed -n 's|host: ||p')\""
      - run: cargo build --release --bins --examples
      - run: picotool uf2 convert target/thumbv6m-none-eabi/release/gnss-7-seg-clock -t elf target/thumbv6m-none-eabi/release/gnss-7-seg-clock.uf2
      - uses: actions/upload-artifact@v4.6.1
        with:
          name: firmware
          path: |
            target/thumbv6m-none-eabi/release/gnss-7-seg-clock
            target/thumbv6m-none-eabi/release/gnss-7-seg-clock.uf2

  cargo-fmt:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4.2.2
      - run: cargo fmt --check

  cargo-clippy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4.2.2
      - run: cargo clippy -- -D warnings

  release-firmware:
    runs-on: ubuntu-24.04
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    needs:
      - cargo-build-and-test
    steps:
      - uses: actions/download-artifact@v4.1.9
        with:
          name: firmware
      - uses: softprops/action-gh-release@670eb2f21a607fad397653d7e45de8f17ade7cc4
        with:
          draft: true
          files: |
            gnss-7-seg-clock
            gnss-7-seg-clock.uf2

  kicad:
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/kicad/kicad:9.0@sha256:97cedd027d7dc7e8d5fc804932f838bd208f2ca024ee8d01001c4d52ac8e666a
      options: --user root
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
      - name: Setup KiCad
        # https://gitlab.com/kicad/packaging/kicad-cli-docker/-/blob/8c967a567a56fb463d3a062a8a87d8537cf6d1f9/Dockerfile.8.0-stable#L162-165
        run: |
          kicad_version=$(kicad-cli -v | cut -d . -f 1,2)
          mkdir -p ~/.config/kicad/"$kicad_version"
          cp /usr/share/kicad/template/*-lib-table ~/.config/kicad/"$kicad_version"
      - name: Run Schematic ERC
        run: >-
          kicad-cli sch erc
          --exit-code-violations
          --format json
          --output erc.json
          hardware/gnss-7-seg-clock.kicad_sch
      - name: Export Schematic PDF
        run: >-
          kicad-cli sch export pdf
          --output schematic.pdf
          hardware/gnss-7-seg-clock.kicad_sch
      - name: Run PCB DRC
        run: >-
          kicad-cli pcb drc
          --exit-code-violations
          --format json
          --output drc.json
          hardware/gnss-7-seg-clock.kicad_pcb
      - uses: actions/upload-artifact@v4.6.1
        with:
          name: kicad-outputs
          path: |
            *.json
            *.pdf
